{"version":3,"sources":["constants/routes.js","context/firebase.js","lib/firebase.js","context/user.js","components/loader.js","helpers/protected-route.js","App.js","hooks/use-auth-listener.js","index.js"],"names":["DASHBOARD","LOGIN","SIGN_UP","PROFILE","NOT_FOUND","SINGLEPOST","FirebaseContext","createContext","firebase","Firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","FieldValue","firestore","UserContext","ReactLoader","type","color","height","width","className","ProtectedRoute","user","children","rest","render","location","React","cloneElement","to","pathname","ROUTES","state","from","Login","lazy","SignUp","Dashboard","Profile","NotFound","SinglePost","App","useState","JSON","parse","localStorage","getItem","setUser","useContext","useEffect","listener","auth","onAuthStateChanged","authUser","setItem","stringify","removeItem","useAuthListener","Provider","value","fallback","path","component","exact","ReactDOM","document","getElementById"],"mappings":"uGAAA,4MAAO,IAAMA,EAAY,IACZC,EAAQ,SACRC,EAAU,WACVC,EAAU,eACVC,EAAY,aACZC,EAAa,mB,gCCL1B,WAEMC,EAAkBC,wBAAc,MACvBD,O,gCCHf,gFAcME,GAdN,YAciBC,IAASC,cAVX,CACbC,OAAQ,0CACRC,WAAY,kCACZC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,kBAITC,EAAeT,IAASU,UAAxBD,Y,gCCfR,WAEME,EAAcb,wBAAc,MACnBa,O,wICDA,SAASC,IACtB,OACE,cAAC,IAAD,CACEC,KAAK,WACLC,MAAM,YACNC,OAAQ,GACRC,MAAO,GACPC,UAAU,8B,8ECJD,SAASC,EAAT,GAAsD,IAA5BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,SAAaC,EAAQ,iBAClE,OACE,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,YAAmB,IAAhBC,EAAe,EAAfA,SACT,OAAIJ,EACKK,IAAMC,aAAaL,EAAU,CAAED,SAGnCA,EAWE,KATH,cAAC,IAAD,CACEO,GAAI,CACFC,SAAUC,IACVC,MAAO,CAAEC,KAAMP,UCV/B,IAAMQ,EAAQC,gBAAK,kBAAM,iCACnBC,EAASD,gBAAK,kBAAM,gCACpBE,EAAYF,gBAAK,kBAAM,6DACvBG,EAAUH,gBAAK,kBAAM,sDACrBI,EAAWJ,gBAAK,kBAAM,gCACtBK,EAAaL,gBAAK,kBAAM,6DAEf,SAASM,IACtB,IAAQnB,ECdK,WACb,MAAwBoB,mBAASC,KAAKC,MAAMC,aAAaC,QAAQ,cAAjE,mBAAOxB,EAAP,KAAayB,EAAb,KACQ7C,EAAa8C,qBAAWhD,KAAxBE,SAkBR,OAhBA+C,qBAAU,WACR,IAAMC,EAAWhD,EAASiD,OAAOC,oBAAmB,SAACC,GAC/CA,GAEFR,aAAaS,QAAQ,WAAYX,KAAKY,UAAUF,IAChDN,EAAQM,KAGRR,aAAaW,WAAW,YACxBT,EAAQ,UAIZ,OAAO,kBAAMG,OACZ,CAAChD,IAEG,CAAEoB,QDNQmC,GAATnC,KAER,OACE,cAAC,IAAYoC,SAAb,CAAsBC,MAAO,CAAErC,QAA/B,SACE,cAAC,IAAD,UACE,cAAC,WAAD,CAAUsC,SAAU,cAAC7C,EAAD,IAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO8C,KAAM9B,IAAc+B,UAAW5B,IACtC,cAAC,IAAD,CAAO2B,KAAM9B,IAAgB+B,UAAW1B,IACxC,cAAC,IAAD,CAAOyB,KAAM9B,IAAgB+B,UAAWxB,IACxC,cAACjB,EAAD,CAAgBC,KAAMA,EAAMuC,KAAM9B,IAAkBgC,OAAK,EAAzD,SACE,cAAC1B,EAAD,MAEF,cAAChB,EAAD,CAAgBC,KAAMA,EAAMuC,KAAM9B,IAAmBgC,OAAK,EAA1D,SACE,cAACvB,EAAD,MAEF,cAAC,IAAD,CAAOsB,UAAWvB,a,kBE1B9ByB,IAASvC,OACP,cAAC,IAAgBiC,SAAjB,CAA0BC,MAAO,CAAEzD,aAAUU,gBAA7C,SACE,cAAC6B,EAAD,MAEFwB,SAASC,eAAe,W","file":"static/js/main.2410eeca.chunk.js","sourcesContent":["export const DASHBOARD = '/'\nexport const LOGIN = '/login'\nexport const SIGN_UP = '/sign-up'\nexport const PROFILE = '/p/:username'\nexport const NOT_FOUND = '/not-found'\nexport const SINGLEPOST = '/:userId/:imgId'\n","import { createContext } from 'react'\n\nconst FirebaseContext = createContext(null)\nexport default FirebaseContext\n","import Firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nconst config = {\n  apiKey: 'AIzaSyAh5dysThGqXt5uCwQEU2Ecp0q9b6nhs2E',\n  authDomain: 'imstagran-c5956.firebaseapp.com',\n  projectId: 'imstagran-c5956',\n  storageBucket: 'imstagran-c5956.appspot.com',\n  messagingSenderId: '671438778087',\n  appId: '1:671438778087:web:58ce19746dbe3cfebc7c42',\n  measurementId: 'G-DL4XJTSZDW'\n}\n\nconst firebase = Firebase.initializeApp(config)\nconst { FieldValue } = Firebase.firestore\n\nexport { firebase, FieldValue }\n","import { createContext } from 'react'\n\nconst UserContext = createContext(null)\nexport default UserContext\n","import Loader from 'react-loader-spinner'\n\nexport default function ReactLoader() {\n  return (\n    <Loader\n      type=\"TailSpin\"\n      color=\"#00000059\"\n      height={70}\n      width={70}\n      className=\"flex justify-center mt-12\"\n    />\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Route, Redirect } from 'react-router-dom'\nimport * as ROUTES from '../constants/routes'\n\nexport default function ProtectedRoute({ user, children, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={({ location }) => {\n        if (user) {\n          return React.cloneElement(children, { user })\n        }\n\n        if (!user) {\n          return (\n            <Redirect\n              to={{\n                pathname: ROUTES.LOGIN,\n                state: { from: location }\n              }}\n            />\n          )\n        }\n\n        return null\n      }}\n    />\n  )\n}\n\nProtectedRoute.propTypes = {\n  user: PropTypes.object,\n  children: PropTypes.object.isRequired\n}\n","import { lazy, Suspense } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport ReactLoader from './components/loader'\nimport * as ROUTES from './constants/routes'\nimport UserContext from './context/user'\nimport useAuthListener from './hooks/use-auth-listener'\n\nimport ProtectedRoute from './helpers/protected-route'\n\nconst Login = lazy(() => import('./pages/login'))\nconst SignUp = lazy(() => import('./pages/sign-up'))\nconst Dashboard = lazy(() => import('./pages/dashboard'))\nconst Profile = lazy(() => import('./pages/profile'))\nconst NotFound = lazy(() => import('./pages/not-found'))\nconst SinglePost = lazy(() => import('./pages/single-post'))\n\nexport default function App() {\n  const { user } = useAuthListener()\n\n  return (\n    <UserContext.Provider value={{ user }}>\n      <Router>\n        <Suspense fallback={<ReactLoader />}>\n          <Switch>\n            <Route path={ROUTES.LOGIN} component={Login} />\n            <Route path={ROUTES.SIGN_UP} component={SignUp} />\n            <Route path={ROUTES.PROFILE} component={Profile} />\n            <ProtectedRoute user={user} path={ROUTES.DASHBOARD} exact>\n              <Dashboard />\n            </ProtectedRoute>\n            <ProtectedRoute user={user} path={ROUTES.SINGLEPOST} exact>\n              <SinglePost />\n            </ProtectedRoute>\n            <Route component={NotFound} />\n          </Switch>\n        </Suspense>\n      </Router>\n    </UserContext.Provider>\n  )\n}\n","import { useState, useEffect, useContext } from 'react'\nimport FirebaseContext from '../context/firebase'\n\nexport default function useAuthListener() {\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('authUser')))\n  const { firebase } = useContext(FirebaseContext)\n\n  useEffect(() => {\n    const listener = firebase.auth().onAuthStateChanged((authUser) => {\n      if (authUser) {\n        // we have a user...therefore we can store the user in localstorage\n        localStorage.setItem('authUser', JSON.stringify(authUser))\n        setUser(authUser)\n      } else {\n        // we don't have an authUser, therefore clear the localstorage\n        localStorage.removeItem('authUser')\n        setUser(null)\n      }\n    })\n\n    return () => listener()\n  }, [firebase])\n\n  return { user }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport FirebaseContext from './context/firebase'\nimport { firebase, FieldValue } from './lib/firebase'\nimport './styles/app.css'\n\nReactDOM.render(\n  <FirebaseContext.Provider value={{ firebase, FieldValue }}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}