{"version":3,"sources":["services/firebase.js","constants/paths.js","hooks/use-user.js","components/header.js","components/post/header.js","components/post/image.js","components/post/actions.js","components/post/footer.js","components/post/add-comment.js","components/post/comments.js","components/post/index.js","context/logged-in-user.js","components/timeline.js","hooks/use-photos.js","components/sidebar/user.js","components/sidebar/suggested-profile.js","components/sidebar/suggestions.js","components/sidebar/index.js","pages/dashboard.js"],"names":["doesUsernameExist","username","a","firebase","firestore","collection","where","get","result","docs","length","getUserByUsername","map","item","data","docId","id","getUserByUserId","userId","user","getSuggestedProfiles","following","query","limit","profiles","updateLoggedInUserFollowing","loggedInUserDocId","profileId","isFollowingProfile","doc","update","FieldValue","arrayRemove","arrayUnion","updateFollowedUserFollowers","profileDocId","followers","getPhotos","userFollowedPhotos","photo","console","log","Promise","all","userLikedPhoto","likes","includes","photosWithUserDetails","getUserPhotosByUserIdForUser","photos","userT","getUserPhotosByUserId","isUserFollowingProfile","loggedInUserUsername","profileUserId","response","toggleFollow","activeUserDocId","followingUserId","DEFAULT_IMAGE_PATH","useUser","useState","activeUser","setActiveUser","useEffect","getUserObjByUserId","Header","loggedInUser","useContext","UserContext","uid","FirebaseContext","history","useHistory","className","to","ROUTES","src","alt","type","title","onClick","auth","signOut","push","onKeyDown","event","key","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","onError","e","target","Image","caption","Actions","totalLikes","likedPhoto","handleFocus","toggleLiked","setToggleLiked","setLikes","handleToggleLiked","tabIndex","Footer","AddComment","comments","setComments","commentInput","comment","setComment","displayName","handleSubmitComment","preventDefault","method","onSubmit","autoComplete","name","placeholder","value","onChange","ref","disabled","Comments","allComments","posted","commentsSlice","setCommentsSlice","showNextComments","slice","formatDistance","Date","Post","content","useRef","imageSrc","current","focus","dateCreated","LoggedInUserContext","createContext","Timeline","setPhotos","followedUserPhotos","sort","b","getTimelinePhotos","usePhotos","count","width","height","User","fullName","SuggestedProfile","followed","setFollowed","Suggestions","setProfiles","suggestedProfiles","profile","Sidebar","Dashboard","document","Provider"],"mappings":"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","file":"static/js/6.92b4a34b.chunk.js","sourcesContent":["import { firebase, FieldValue } from '../lib/firebase'\n\nexport async function doesUsernameExist(username) {\n  const result = await firebase\n    .firestore()\n    .collection('users')\n    .where('username', '==', username)\n    .get()\n\n  return result.docs.length > 0\n}\n\nexport async function getUserByUsername(username) {\n  const result = await firebase\n    .firestore()\n    .collection('users')\n    .where('username', '==', username)\n    .get()\n\n  return result.docs.map((item) => ({\n    ...item.data(),\n    docId: item.id\n  }))\n}\n\n// get user from the firestore where userId === userId (passed from the auth)\nexport async function getUserByUserId(userId) {\n  const result = await firebase.firestore().collection('users').where('userId', '==', userId).get()\n  const user = result.docs.map((item) => ({\n    ...item.data(),\n    docId: item.id\n  }))\n\n  return user\n}\n\n// check all conditions before limit results\nexport async function getSuggestedProfiles(userId, following) {\n  let query = firebase.firestore().collection('users')\n\n  if (following.length > 0) {\n    query = query.where('userId', 'not-in', [...following, userId])\n  } else {\n    query = query.where('userId', '!=', userId)\n  }\n  const result = await query.limit(10).get()\n\n  const profiles = result.docs.map((user) => ({\n    ...user.data(),\n    docId: user.id\n  }))\n\n  return profiles\n}\n\nexport async function updateLoggedInUserFollowing(\n  loggedInUserDocId, // currently logged in user document id (karl's profile)\n  profileId, // the user that karl requests to follow\n  isFollowingProfile // true/false (am i currently following this person?)\n) {\n  return firebase\n    .firestore()\n    .collection('users')\n    .doc(loggedInUserDocId)\n    .update({\n      following: isFollowingProfile\n        ? FieldValue.arrayRemove(profileId)\n        : FieldValue.arrayUnion(profileId)\n    })\n}\n\nexport async function updateFollowedUserFollowers(\n  profileDocId, // currently logged in user document id (karl's profile)\n  loggedInUserDocId, // the user that karl requests to follow\n  isFollowingProfile // true/false (am i currently following this person?)\n) {\n  return firebase\n    .firestore()\n    .collection('users')\n    .doc(profileDocId)\n    .update({\n      followers: isFollowingProfile\n        ? FieldValue.arrayRemove(loggedInUserDocId)\n        : FieldValue.arrayUnion(loggedInUserDocId)\n    })\n}\n\nexport async function getPhotos(userId, following) {\n  // [5,4,2] => following\n  const result = await firebase\n    .firestore()\n    .collection('photos')\n    .where('userId', 'in', following)\n    .get()\n\n  const userFollowedPhotos = result.docs.map((photo) => ({\n    ...photo.data(),\n    docId: photo.id\n  }))\n\n  console.log(userFollowedPhotos)\n\n  const photosWithUserDetails = await Promise.all(\n    userFollowedPhotos.map(async (photo) => {\n      let userLikedPhoto = false\n      if (photo.likes.includes(userId)) {\n        userLikedPhoto = true\n      }\n      // photo.userId = 2\n      const user = await getUserByUserId(photo.userId)\n      // raphael\n      const { username } = user[0]\n      return { username, ...photo, userLikedPhoto }\n    })\n  )\n\n  return photosWithUserDetails\n}\n\nexport async function getUserPhotosByUserIdForUser(userId, user) {\n  const result = await firebase.firestore().collection('photos').where('userId', '==', userId).get()\n\n  const photos = result.docs.map((photo) => ({\n    ...photo.data(),\n    docId: photo.id\n  }))\n\n  const userT = user\n  const photosWithUserDetails = await Promise.all(\n    photos.map(async (photo) => {\n      let userLikedPhoto = false\n      console.log(photo.likes)\n      if (photo.likes.includes(userT)) {\n        console.log('1')\n        userLikedPhoto = true\n      }\n      // photo.userId = 2\n      const user = await getUserByUserId(photo.userId)\n      // raphael\n      const { username } = user[0]\n      console.log(userLikedPhoto)\n      return { username, ...photo, userLikedPhoto }\n    })\n  )\n\n  return photosWithUserDetails\n}\n\nexport async function getUserPhotosByUserId(userId) {\n  const result = await firebase.firestore().collection('photos').where('userId', '==', userId).get()\n\n  const photos = result.docs.map((photo) => ({\n    ...photo.data(),\n    docId: photo.id\n  }))\n\n  return photos\n}\n\nexport async function isUserFollowingProfile(loggedInUserUsername, profileUserId) {\n  const result = await firebase\n    .firestore()\n    .collection('users')\n    .where('username', '==', loggedInUserUsername) // karl (active logged in user)\n    .where('following', 'array-contains', profileUserId)\n    .get()\n\n  const [response = {}] = result.docs.map((item) => ({\n    ...item.data(),\n    docId: item.id\n  }))\n\n  return response.userId\n}\n\nexport async function toggleFollow(\n  isFollowingProfile,\n  activeUserDocId,\n  profileDocId,\n  profileUserId,\n  followingUserId\n) {\n  // 1st param: karl's doc id\n  // 2nd param: raphael's user id\n  // 3rd param: is the user following this profile? e.g. does karl follow raphael? (true/false)\n  await updateLoggedInUserFollowing(activeUserDocId, profileUserId, isFollowingProfile)\n\n  // 1st param: karl's user id\n  // 2nd param: raphael's doc id\n  // 3rd param: is the user following this profile? e.g. does karl follow raphael? (true/false)\n  await updateFollowedUserFollowers(profileDocId, followingUserId, isFollowingProfile)\n}\n","export const DEFAULT_IMAGE_PATH = '/images/avatars/default.png'\n","import { useState, useEffect } from 'react'\nimport { getUserByUserId } from '../services/firebase'\n\nexport default function useUser(userId) {\n  const [activeUser, setActiveUser] = useState()\n\n  useEffect(() => {\n    async function getUserObjByUserId(userId) {\n      const [user] = await getUserByUserId(userId)\n      setActiveUser(user || {})\n    }\n\n    if (userId) {\n      getUserObjByUserId(userId)\n    }\n  }, [userId])\n\n  return { user: activeUser, setActiveUser }\n}\n","import { useContext } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport FirebaseContext from '../context/firebase'\nimport UserContext from '../context/user'\nimport * as ROUTES from '../constants/routes'\nimport { DEFAULT_IMAGE_PATH } from '../constants/paths'\nimport useUser from '../hooks/use-user'\n\nexport default function Header() {\n  const { user: loggedInUser } = useContext(UserContext)\n  const { user } = useUser(loggedInUser?.uid)\n  const { firebase } = useContext(FirebaseContext)\n  const history = useHistory()\n\n  return (\n    <header className=\"h-16 bg-white border-b border-gray-primary mb-8\">\n      <div className=\"container mx-auto max-w-screen-lg h-full\">\n        <div className=\"flex justify-between h-full\">\n          <div className=\"text-gray-700 text-center flex items-center align-items cursor-pointer\">\n            <h1 className=\"flex justify-center w-full\">\n              <Link to={ROUTES.DASHBOARD} aria-label=\"Instagram logo\">\n                <img src=\"/images/logo.png\" alt=\"Instagram\" className=\"mt-2 w-6/12\" />\n              </Link>\n            </h1>\n            <button\n              type=\"button\"\n              title=\"Sign Out\"\n              onClick={() => {\n                firebase.auth().signOut()\n                history.push(ROUTES.LOGIN)\n              }}\n              onKeyDown={(event) => {\n                if (event.key === 'Enter') {\n                  firebase.auth().signOut()\n                  history.push(ROUTES.LOGIN)\n                }\n              }}\n            >\n              <svg\n                className=\"w-8 mr-6 text-black-light cursor-pointer\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\n                />\n              </svg>\n            </button>\n          </div>\n          <div className=\"text-gray-700 text-center flex items-center align-items\">\n            {loggedInUser ? (\n              <>\n                <Link to={ROUTES.DASHBOARD} aria-label=\"Dashboard\">\n                  <svg\n                    className=\"w-8 mr-6 text-black-light cursor-pointer\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\"\n                    />\n                  </svg>\n                </Link>\n\n                <button\n                  type=\"button\"\n                  title=\"Sign Out\"\n                  onClick={() => {\n                    firebase.auth().signOut()\n                    history.push(ROUTES.LOGIN)\n                  }}\n                  onKeyDown={(event) => {\n                    if (event.key === 'Enter') {\n                      firebase.auth().signOut()\n                      history.push(ROUTES.LOGIN)\n                    }\n                  }}\n                >\n                  <svg\n                    className=\"w-8 mr-6 text-black-light cursor-pointer\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\n                    />\n                  </svg>\n                </button>\n                {user && (\n                  <div className=\"flex items-center cursor-pointer\">\n                    <Link to={`/p/${user?.username}`}>\n                      <img\n                        className=\"rounded-full h-8 w-8 flex\"\n                        src={`/images/avatars/${user?.username}.jpg`}\n                        alt={`${user?.username} profile`}\n                        onError={(e) => {\n                          e.target.src = DEFAULT_IMAGE_PATH\n                        }}\n                      />\n                    </Link>\n                  </div>\n                )}\n              </>\n            ) : (\n              <>\n                <Link to={ROUTES.LOGIN}>\n                  <button\n                    type=\"button\"\n                    className=\"bg-blue-medium font-bold text-sm rounded text-white w-20 h-8\"\n                  >\n                    Log In\n                  </button>\n                </Link>\n                <Link to={ROUTES.SIGN_UP}>\n                  <button\n                    type=\"button\"\n                    className=\"font-bold text-sm rounded text-blue-medium w-20 h-8\"\n                  >\n                    Sign Up\n                  </button>\n                </Link>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </header>\n  )\n}\n","/* eslint-disable jsx-a11y/img-redundant-alt */\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\nexport default function Header({ username }) {\n  return (\n    <div className=\"flex border-b border-gray-primary h-4 p-4 py-8\">\n      <div className=\"flex items-center\">\n        <Link to={`/p/${username}`} className=\"flex items-center\">\n          <img\n            className=\"rounded-full h-8 w-8 flex mr-3\"\n            src={`/images/avatars/${username}.jpg`}\n            alt={`${username} profile picture`}\n          />\n          <p className=\"font-bold\">{username}</p>\n        </Link>\n      </div>\n    </div>\n  )\n}\n\nHeader.propTypes = {\n  username: PropTypes.string.isRequired\n}\n","import PropTypes from 'prop-types'\n\nexport default function Image({ src, caption }) {\n  return <img src={src} alt={caption} />\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  caption: PropTypes.string.isRequired\n}\n","import { useState, useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport FirebaseContext from '../../context/firebase'\nimport UserContext from '../../context/user'\n\nexport default function Actions({ docId, totalLikes, likedPhoto, handleFocus }) {\n  const {\n    user: { uid: userId }\n  } = useContext(UserContext)\n  const [toggleLiked, setToggleLiked] = useState(likedPhoto)\n  const [likes, setLikes] = useState(totalLikes)\n  const { firebase, FieldValue } = useContext(FirebaseContext)\n\n  const handleToggleLiked = async () => {\n    setToggleLiked((toggleLiked) => !toggleLiked)\n\n    await firebase\n      .firestore()\n      .collection('photos')\n      .doc(docId)\n      .update({\n        likes: toggleLiked ? FieldValue.arrayRemove(userId) : FieldValue.arrayUnion(userId)\n      })\n\n    setLikes((likes) => (toggleLiked ? likes - 1 : likes + 1))\n  }\n\n  return (\n    <>\n      <div className=\"flex justify-between p-4\">\n        <div className=\"flex\">\n          <svg\n            onClick={handleToggleLiked}\n            onKeyDown={(event) => {\n              if (event.key === 'Enter') {\n                handleToggleLiked()\n              }\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n            tabIndex={0}\n            className={`w-8 mr-4 select-none cursor-pointer focus:outline-none ${\n              toggleLiked ? 'fill-red text-red-primary' : 'text-black-light'\n            }`}\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"\n            />\n          </svg>\n          <svg\n            onClick={handleFocus}\n            onKeyDown={(event) => {\n              if (event.key === 'Enter') {\n                handleFocus()\n              }\n            }}\n            className=\"w-8 text-black-light select-none cursor-pointer focus:outline-none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n            tabIndex={0}\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"\n            />\n          </svg>\n        </div>\n      </div>\n      <div className=\"p-4 py-0\">\n        <p className=\"font-bold\">{likes === 1 ? `${likes} like` : `${likes} likes`}</p>\n      </div>\n    </>\n  )\n}\n\nActions.propTypes = {\n  docId: PropTypes.string.isRequired,\n  totalLikes: PropTypes.number.isRequired,\n  likedPhoto: PropTypes.bool.isRequired,\n  handleFocus: PropTypes.func.isRequired\n}\n","import PropTypes from 'prop-types'\n\nexport default function Footer({ caption, username }) {\n  return (\n    <div className=\"p-4 pt-2 pb-1\">\n      <span className=\"mr-1 font-bold\">{username}</span>\n      <span className=\"italic\">{caption}</span>\n    </div>\n  )\n}\n\nFooter.propTypes = {\n  caption: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired\n}\n","import { useState, useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport FirebaseContext from '../../context/firebase'\nimport UserContext from '../../context/user'\n\nexport default function AddComment({ docId, comments, setComments, commentInput }) {\n  const [comment, setComment] = useState('')\n  const { firebase, FieldValue } = useContext(FirebaseContext)\n  const {\n    user: { displayName }\n  } = useContext(UserContext)\n\n  const handleSubmitComment = (event) => {\n    event.preventDefault()\n\n    setComments([...comments, { displayName, comment }])\n    setComment('')\n\n    return firebase\n      .firestore()\n      .collection('photos')\n      .doc(docId)\n      .update({\n        comments: FieldValue.arrayUnion({ displayName, comment })\n      })\n  }\n\n  return (\n    <div className=\"border-t border-gray-primary\">\n      <form\n        className=\"flex justify-between pl-0 pr-5\"\n        method=\"POST\"\n        onSubmit={(event) =>\n          comment.length >= 1 ? handleSubmitComment(event) : event.preventDefault()\n        }\n      >\n        <input\n          aria-label=\"Add a comment\"\n          autoComplete=\"off\"\n          className=\"text-sm text-gray-base w-full mr-3 py-5 px-4\"\n          type=\"text\"\n          name=\"add-comment\"\n          placeholder=\"Add a comment...\"\n          value={comment}\n          onChange={({ target }) => setComment(target.value)}\n          ref={commentInput}\n        />\n        <button\n          className={`text-sm font-bold text-blue-medium ${!comment && 'opacity-25'}`}\n          type=\"button\"\n          disabled={comment.length < 1}\n          onClick={handleSubmitComment}\n        >\n          Post\n        </button>\n      </form>\n    </div>\n  )\n}\n\nAddComment.propTypes = {\n  docId: PropTypes.string.isRequired,\n  comments: PropTypes.array.isRequired,\n  setComments: PropTypes.func.isRequired,\n  commentInput: PropTypes.object\n}\n","import { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { formatDistance } from 'date-fns'\nimport { Link } from 'react-router-dom'\nimport AddComment from './add-comment'\n\nexport default function Comments({ docId, comments: allComments, posted, commentInput }) {\n  const [comments, setComments] = useState(allComments)\n  const [commentsSlice, setCommentsSlice] = useState(3)\n\n  const showNextComments = () => {\n    setCommentsSlice(commentsSlice + 3)\n  }\n\n  return (\n    <>\n      <div className=\"p-4 pt-1 pb-4\">\n        {comments.slice(0, commentsSlice).map((item) => (\n          <p key={`${item.comment}-${item.displayName}`} className=\"mb-1\">\n            <Link to={`/p/${item.displayName}`}>\n              <span className=\"mr-1 font-bold\">{item.displayName}</span>\n            </Link>\n            <span>{item.comment}</span>\n          </p>\n        ))}\n        {comments.length >= 3 && commentsSlice < comments.length && (\n          <button\n            className=\"text-sm text-gray-base mb-1 cursor-pointer focus:outline-none\"\n            type=\"button\"\n            onClick={showNextComments}\n            onKeyDown={(event) => {\n              if (event.key === 'Enter') {\n                showNextComments()\n              }\n            }}\n          >\n            View more comments\n          </button>\n        )}\n        <p className=\"text-gray-base uppercase text-xs mt-2\">\n          {formatDistance(posted, new Date())} ago\n        </p>\n      </div>\n      <AddComment\n        docId={docId}\n        comments={comments}\n        setComments={setComments}\n        commentInput={commentInput}\n      />\n    </>\n  )\n}\n\nComments.propTypes = {\n  docId: PropTypes.string.isRequired,\n  comments: PropTypes.array.isRequired,\n  posted: PropTypes.number.isRequired,\n  commentInput: PropTypes.object.isRequired\n}\n","import { useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport Header from './header'\nimport Image from './image'\nimport Actions from './actions'\nimport Footer from './footer'\nimport Comments from './comments'\n\nexport default function Post({ content }) {\n  const commentInput = useRef(null)\n  const handleFocus = () => commentInput.current.focus()\n\n  // components\n  // -> header, image, actions (like & comment icons), footer, comments\n  return (\n    <div className=\"rounded col-span-4 border bg-white border-gray-primary mb-12\">\n      <Header username={content.username} />\n      <Image src={content.imageSrc} caption={content.caption} />\n      <Actions\n        docId={content.docId}\n        totalLikes={content.likes.length}\n        likedPhoto={content.userLikedPhoto}\n        handleFocus={handleFocus}\n      />\n      <Footer caption={content.caption} username={content.username} />\n      <Comments\n        docId={content.docId}\n        comments={content.comments}\n        posted={content.dateCreated}\n        commentInput={commentInput}\n      />\n    </div>\n  )\n}\n\nPost.propTypes = {\n  content: PropTypes.shape({\n    username: PropTypes.string.isRequired,\n    imageSrc: PropTypes.string.isRequired,\n    caption: PropTypes.string.isRequired,\n    docId: PropTypes.string.isRequired,\n    userLikedPhoto: PropTypes.bool.isRequired,\n    likes: PropTypes.array.isRequired,\n    comments: PropTypes.array.isRequired,\n    dateCreated: PropTypes.number.isRequired\n  })\n}\n","import { createContext } from 'react'\n\nconst LoggedInUserContext = createContext(null)\nexport default LoggedInUserContext\n","/* eslint-disable no-nested-ternary */\nimport { useContext } from 'react'\nimport Skeleton from 'react-loading-skeleton'\nimport LoggedInUserContext from '../context/logged-in-user'\nimport usePhotos from '../hooks/use-photos'\nimport Post from './post'\n\nexport default function Timeline() {\n  const { user } = useContext(LoggedInUserContext)\n  const { photos } = usePhotos(user)\n  console.log(photos)\n\n  return (\n    <div className=\"container col-span-2\">\n      {!photos ? (\n        <Skeleton count={4} width={640} height={500} className=\"mb-5\" />\n      ) : (\n        photos.map((content) => <Post key={content.docId} content={content} />)\n      )}\n    </div>\n  )\n}\n","import { useState, useEffect } from 'react'\nimport { getPhotos } from '../services/firebase'\n\nexport default function usePhotos(user) {\n  const [photos, setPhotos] = useState(null)\n\n  useEffect(() => {\n    async function getTimelinePhotos() {\n      // does the user actually follow people?\n      if (user?.following?.length > 0) {\n        const followedUserPhotos = await getPhotos(user.userId, user.following)\n        console.log(followedUserPhotos)\n        // re-arrange array to be newest photos first by dateCreated\n        followedUserPhotos.sort((a, b) => b.dateCreated - a.dateCreated)\n        setPhotos(followedUserPhotos)\n      }\n    }\n\n    getTimelinePhotos()\n  }, [user?.userId, user?.following])\n\n  return { photos }\n}\n","import PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport Skeleton from 'react-loading-skeleton'\nimport { DEFAULT_IMAGE_PATH } from '../../constants/paths'\n\nexport default function User({ username, fullName }) {\n  return !username || !fullName ? (\n    <Skeleton count={1} height={61} />\n  ) : (\n    <Link to={`/p/${username}`} className=\"grid grid-cols-4 gap-4 mb-6 items-center\">\n      <div className=\"flex items-center justify-between col-span-1\">\n        <img\n          className=\"rounded-full w-16 flex mr-3\"\n          src={`/images/avatars/${username}.jpg`}\n          alt=\"\"\n          onError={(e) => {\n            e.target.src = DEFAULT_IMAGE_PATH\n          }}\n        />\n      </div>\n      <div className=\"col-span-3\">\n        <p className=\"font-bold text-sm\">{username}</p>\n        <p className=\"text-sm\">{fullName}</p>\n      </div>\n    </Link>\n  )\n}\n\nUser.propTypes = {\n  username: PropTypes.string,\n  fullName: PropTypes.string\n}\n","import { useState, useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport {\n  updateLoggedInUserFollowing,\n  updateFollowedUserFollowers,\n  getUserByUserId\n} from '../../services/firebase'\nimport LoggedInUserContext from '../../context/logged-in-user'\n\nexport default function SuggestedProfile({\n  profileDocId,\n  username,\n  profileId,\n  userId,\n  loggedInUserDocId\n}) {\n  const [followed, setFollowed] = useState(false)\n  const { setActiveUser } = useContext(LoggedInUserContext)\n\n  async function handleFollowUser() {\n    setFollowed(true)\n    await updateLoggedInUserFollowing(loggedInUserDocId, profileId, false)\n    await updateFollowedUserFollowers(profileDocId, userId, false)\n    const [user] = await getUserByUserId(userId)\n    setActiveUser(user)\n  }\n\n  return !followed ? (\n    <div className=\"flex flex-row items-center align-items justify-between\">\n      <div className=\"flex items-center justify-between\">\n        <img\n          className=\"rounded-full w-8 flex mr-3\"\n          src={`/images/avatars/${username}.jpg`}\n          alt=\"\"\n          onError={(e) => {\n            e.target.src = `/images/avatars/default.png`\n          }}\n        />\n        <Link to={`/p/${username}`}>\n          <p className=\"font-bold text-sm\">{username}</p>\n        </Link>\n      </div>\n      <button\n        className=\"text-xs font-bold text-blue-medium\"\n        type=\"button\"\n        onClick={handleFollowUser}\n      >\n        Follow\n      </button>\n    </div>\n  ) : null\n}\n\nSuggestedProfile.propTypes = {\n  profileDocId: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired,\n  profileId: PropTypes.string.isRequired,\n  userId: PropTypes.string.isRequired,\n  loggedInUserDocId: PropTypes.string.isRequired\n}\n","/* eslint-disable no-nested-ternary */\nimport { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport Skeleton from 'react-loading-skeleton'\nimport { getSuggestedProfiles } from '../../services/firebase'\nimport SuggestedProfile from './suggested-profile'\n\nexport default function Suggestions({ userId, following, loggedInUserDocId }) {\n  const [profiles, setProfiles] = useState(null)\n\n  useEffect(() => {\n    async function suggestedProfiles() {\n      const response = await getSuggestedProfiles(userId, following)\n      setProfiles(response)\n    }\n\n    if (userId) {\n      suggestedProfiles()\n    }\n  }, [userId])\n  // hint: use the firebase service (call using userId)\n  // getSuggestedProfiles\n  // call the async function ^^^^ within useEffect\n  // store it in state\n  // go ahead and render (wait on the profiles as in 'skeleton')\n\n  return !profiles ? (\n    <Skeleton count={1} height={150} className=\"mt-5\" />\n  ) : profiles.length > 0 ? (\n    <div className=\"rounded flex flex-col\">\n      <div className=\"text-sm flex items-center align-items justify-between mb-2\">\n        <p className=\"font-bold text-gray-base\">Suggestions for you</p>\n      </div>\n      <div className=\"mt-4 grid gap-5\">\n        {profiles.map((profile) => (\n          <SuggestedProfile\n            key={profile.docId}\n            profileDocId={profile.docId}\n            username={profile.username}\n            profileId={profile.userId}\n            userId={userId}\n            loggedInUserDocId={loggedInUserDocId}\n          />\n        ))}\n      </div>\n    </div>\n  ) : null\n}\n\nSuggestions.propTypes = {\n  userId: PropTypes.string,\n  following: PropTypes.array,\n  loggedInUserDocId: PropTypes.string\n}\n","import { useContext } from 'react'\nimport User from './user'\nimport Suggestions from './suggestions'\nimport LoggedInUserContext from '../../context/logged-in-user'\n\nexport default function Sidebar() {\n  const { user: { docId = '', fullName, username, userId, following } = {} } =\n    useContext(LoggedInUserContext)\n\n  return (\n    <div className=\"p-4\">\n      <User username={username} fullName={fullName} />\n      <Suggestions userId={userId} following={following} loggedInUserDocId={docId} />\n    </div>\n  )\n}\n","import { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport Header from '../components/header'\nimport Timeline from '../components/timeline'\nimport Sidebar from '../components/sidebar'\nimport useUser from '../hooks/use-user'\nimport LoggedInUserContext from '../context/logged-in-user'\n\nexport default function Dashboard({ user: loggedInUser }) {\n  const { user, setActiveUser } = useUser(loggedInUser.uid)\n  useEffect(() => {\n    document.title = 'Instagram'\n  }, [])\n\n  return (\n    <LoggedInUserContext.Provider value={{ user, setActiveUser }}>\n      <div className=\"bg-gray-background\">\n        <Header />\n        <div className=\"grid grid-cols-3 gap-4 justify-between mx-auto max-w-screen-lg\">\n          <Timeline />\n          <Sidebar />\n        </div>\n      </div>\n    </LoggedInUserContext.Provider>\n  )\n}\n\nDashboard.propTypes = {\n  user: PropTypes.object.isRequired\n}\n"],"sourceRoot":""}